// Test script ƒë·ªÉ ki·ªÉm tra modal chi ti·∫øt l·ªãch h·∫πn

console.log("üß™ Testing Appointment Detail Modal");
console.log("==================================");

// Sample appointment data v·ªõi ƒë·∫ßy ƒë·ªß th√¥ng tin
const sampleAppointment = {
  id: 23,
  price: 200000,
  note: "Kh√°m ƒë·ªãnh k·ª≥, c√≥ tri·ªáu ch·ª©ng ƒëau b·ª•ng",
  preferredDate: "2025-07-08",
  created_at: "2025-07-06T23:37:58.902809",
  status: "CONFIRMED",
  serviceType: "CONSULTING_ON",
  customerId: 1,
  customerName: "Quoc An",
  serviceName: "Kh√°m ph·ª• khoa ƒë·ªãnh k·ª≥",
  isPaid: true,
  paymentStatus: "ƒê√£ thanh to√°n qua VNPay",
  appointmentDetails: [
    {
      id: 23,
      serviceId: 1,
      serviceName: "Kh√°m ph·ª• khoa ƒë·ªãnh k·ª≥",
      consultantId: 2,
      consultantName: "BS. Nguyen Quoc An",
      slotTime: "2025-07-08T08:30:00",
      joinUrl: "https://zoom.us/j/123456789?pwd=abcdef",
      startUrl: "https://zoom.us/s/123456789?pwd=startabc",
      status: "CONFIRMED",
      medicalResult: "K·∫øt qu·∫£ b√¨nh th∆∞·ªùng, kh√¥ng c√≥ v·∫•n ƒë·ªÅ g√¨ ƒë√°ng lo ng·∫°i",
      room: {
        id: 1,
        name: "Ph√≤ng s·ªë 1",
        description: "Ph√≤ng kh√°m ph·ª• khoa ch√≠nh",
        specializationName: "Khoa Ph·ª• S·∫£n"
      }
    }
  ]
};

// Sample appointment v·ªõi multiple services (combo)
const comboAppointment = {
  id: 24,
  price: 500000,
  note: "G√≥i kh√°m t·ªïng qu√°t",
  preferredDate: "2025-07-10",
  created_at: "2025-07-07T10:15:30.123456",
  status: "PENDING",
  serviceType: "COMBO",
  customerId: 1,
  customerName: "Quoc An",
  serviceName: "G√≥i kh√°m s·ª©c kh·ªèe t·ªïng qu√°t",
  isPaid: false,
  paymentStatus: null,
  appointmentDetails: [
    {
      id: 24,
      serviceId: 2,
      serviceName: "Kh√°m n·ªôi khoa",
      consultantId: 3,
      consultantName: "BS. Tran Van B",
      slotTime: "2025-07-10T09:00:00",
      joinUrl: null,
      startUrl: null,
      status: "PENDING",
      medicalResult: null,
      room: {
        id: 2,
        name: "Ph√≤ng s·ªë 2",
        description: "Ph√≤ng kh√°m n·ªôi khoa",
        specializationName: "Khoa N·ªôi"
      }
    },
    {
      id: 25,
      serviceId: 3,
      serviceName: "X√©t nghi·ªám m√°u",
      consultantId: 4,
      consultantName: "BS. Le Thi C",
      slotTime: "2025-07-10T10:30:00",
      joinUrl: null,
      startUrl: null,
      status: "PENDING",
      medicalResult: null,
      room: {
        id: 3,
        name: "Ph√≤ng x√©t nghi·ªám",
        description: "Ph√≤ng x√©t nghi·ªám t·ªïng h·ª£p",
        specializationName: "Khoa X√©t nghi·ªám"
      }
    }
  ]
};

// Function ƒë·ªÉ test hi·ªÉn th·ªã th√¥ng tin chung
function testGeneralInfo(appointment) {
  console.log("\nüìã TH√îNG TIN CHUNG");
  console.log("==================");
  console.log("ID l·ªãch h·∫πn:", appointment.id);
  console.log("Ng√†y h·∫πn:", appointment.preferredDate);
  console.log("D·ªãch v·ª•:", appointment.serviceName);
  console.log("Lo·∫°i d·ªãch v·ª•:", appointment.serviceType);
  console.log("Tr·∫°ng th√°i:", appointment.status);
  console.log("Gi√°:", appointment.price?.toLocaleString(), "VND");
  console.log("Ghi ch√∫:", appointment.note || "Kh√¥ng c√≥");
  console.log("Th·ªùi gian t·∫°o:", new Date(appointment.created_at).toLocaleString());
}

// Function ƒë·ªÉ test hi·ªÉn th·ªã chi ti·∫øt d·ªãch v·ª•
function testServiceDetails(appointment) {
  console.log("\nüè• CHI TI·∫æT D·ªäCH V·ª§");
  console.log("===================");
  
  if (appointment.appointmentDetails && appointment.appointmentDetails.length > 0) {
    appointment.appointmentDetails.forEach((detail, index) => {
      console.log(`\n--- D·ªãch v·ª• ${index + 1} ---`);
      console.log("T√™n d·ªãch v·ª•:", detail.serviceName);
      console.log("B√°c sƒ© t∆∞ v·∫•n:", detail.consultantName || "Ch∆∞a ph√¢n c√¥ng");
      console.log("Th·ªùi gian kh√°m:", detail.slotTime ? new Date(detail.slotTime).toLocaleString() : "Ch∆∞a x√°c ƒë·ªãnh");
      
      if (detail.room) {
        console.log("Ph√≤ng kh√°m:", detail.room.name);
        console.log("Chuy√™n khoa:", detail.room.specializationName);
      }
      
      console.log("Tr·∫°ng th√°i d·ªãch v·ª•:", detail.status);
      
      if (detail.joinUrl) {
        console.log("Link t∆∞ v·∫•n online:", detail.joinUrl);
      }
      
      if (detail.medicalResult) {
        console.log("K·∫øt qu·∫£ kh√°m:", detail.medicalResult);
      }
    });
  } else {
    console.log("Kh√¥ng c√≥ chi ti·∫øt d·ªãch v·ª•");
  }
}

// Function ƒë·ªÉ test hi·ªÉn th·ªã th√¥ng tin thanh to√°n
function testPaymentInfo(appointment) {
  console.log("\nüí≥ TH√îNG TIN THANH TO√ÅN");
  console.log("=======================");
  console.log("Tr·∫°ng th√°i thanh to√°n:", appointment.isPaid ? "ƒê√£ thanh to√°n" : "Ch∆∞a thanh to√°n");
  
  if (appointment.paymentStatus) {
    console.log("Chi ti·∫øt thanh to√°n:", appointment.paymentStatus);
  }
}

// Function ƒë·ªÉ test to√†n b·ªô modal
function testCompleteModal(appointment) {
  console.log(`\nüîç TESTING MODAL FOR APPOINTMENT ${appointment.id}`);
  console.log("=".repeat(50));
  
  testGeneralInfo(appointment);
  testServiceDetails(appointment);
  testPaymentInfo(appointment);
  
  console.log("\n‚úÖ Modal Content Complete!");
}

// Ch·∫°y tests
console.log("üöÄ Running Modal Tests...");

testCompleteModal(sampleAppointment);
testCompleteModal(comboAppointment);

console.log("\nüìä MODAL FEATURES TESTED:");
console.log("‚úÖ Th√¥ng tin chung (ID, ng√†y, d·ªãch v·ª•, tr·∫°ng th√°i, gi√°, ghi ch√∫, th·ªùi gian t·∫°o)");
console.log("‚úÖ Chi ti·∫øt d·ªãch v·ª• (t√™n, b√°c sƒ©, th·ªùi gian, ph√≤ng, chuy√™n khoa, tr·∫°ng th√°i)");
console.log("‚úÖ Link t∆∞ v·∫•n online (n·∫øu c√≥)");
console.log("‚úÖ K·∫øt qu·∫£ kh√°m (n·∫øu c√≥)");
console.log("‚úÖ Th√¥ng tin thanh to√°n");
console.log("‚úÖ Multiple services support (combo)");
console.log("‚úÖ Responsive design");
console.log("‚úÖ Status color coding");

console.log("\nüéØ MODAL STRUCTURE:");
console.log("1. Header: 'Chi ti·∫øt l·ªãch h·∫πn'");
console.log("2. Section 1: Th√¥ng tin chung");
console.log("3. Section 2: Chi ti·∫øt d·ªãch v·ª• (c√≥ th·ªÉ nhi·ªÅu d·ªãch v·ª•)");
console.log("4. Section 3: Th√¥ng tin thanh to√°n");
console.log("5. Footer: Kh√¥ng c√≥ (ch·ªâ n√∫t ƒë√≥ng)");

// Export functions
window.testCompleteModal = testCompleteModal;
window.testGeneralInfo = testGeneralInfo;
window.testServiceDetails = testServiceDetails;
window.testPaymentInfo = testPaymentInfo;

console.log("\nüéØ Available test functions:");
console.log("- testCompleteModal(appointment)");
console.log("- testGeneralInfo(appointment)");
console.log("- testServiceDetails(appointment)");
console.log("- testPaymentInfo(appointment)");
