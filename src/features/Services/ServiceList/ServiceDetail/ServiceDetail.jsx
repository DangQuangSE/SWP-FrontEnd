import React, { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import BookingForm from "../../Booking/BookingForm";
import { Tabs, Card, Avatar, Modal, Button } from "antd";
import { UserOutlined } from "@ant-design/icons";
import "./ServiceDetail.css";
import api from "../../../../configs/api.js";
const ServiceDetail = () => {
  const { id } = useParams();
  const [service, setService] = useState(null);
  const [loading, setLoading] = useState(true);
  // Th√™m state m·ªõi cho ƒë√°nh gi√°
  const [feedbacks, setFeedbacks] = useState([]);
  // Th√™m state cho danh s√°ch b√°c sƒ©
  const [consultants, setConsultants] = useState([]);
  // State cho modal th√¥ng tin b√°c sƒ©
  const [isModalVisible, setIsModalVisible] = useState(false);
  const [selectedConsultant, setSelectedConsultant] = useState(null);

  // H√†m x·ª≠ l√Ω modal
  const showConsultantModal = (consultant) => {
    setSelectedConsultant(consultant);
    setIsModalVisible(true);
  };

  const handleModalClose = () => {
    setIsModalVisible(false);
    setSelectedConsultant(null);
  };

  const handleSelectConsultant = (consultant) => {
    // L∆∞u th√¥ng tin b√°c sƒ© ƒë√£ ch·ªçn v√†o localStorage
    localStorage.setItem("selectedConsultantId", consultant.id);
    localStorage.setItem(
      "selectedConsultantName",
      consultant.fullname || "Ch∆∞a c√≥ t√™n"
    );
    localStorage.setItem(
      "selectedConsultantSpecialization",
      consultant.specialization || "Ch∆∞a c√≥ chuy√™n khoa"
    );

    // Trigger event ƒë·ªÉ BookingForm c·∫≠p nh·∫≠t
    window.dispatchEvent(new Event("consultantSelected"));

    console.log("ƒê√£ ch·ªçn b√°c sƒ©:", consultant.fullname);
    handleModalClose();
  };

  // Component hi·ªÉn th·ªã ƒë√°nh gi√° sao
  const StarRating = ({ rating }) => {
    const stars = [];
    for (let i = 1; i <= 5; i++) {
      stars.push(
        <span key={i} className={i <= rating ? "star filled" : "star"}>
          ‚òÖ
        </span>
      );
    }
    return <div className="star-rating">{stars}</div>;
  };

  useEffect(() => {
    if (!id) return;

    api
      .get(`/services/${id}`)
      .then((res) => {
        setService(res.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error("L·ªói khi l·∫•y chi ti·∫øt d·ªãch v·ª•:", err);
        setLoading(false);
      });

    // Th√™m ph·∫ßn l·∫•y ƒë√°nh gi√°
    api
      .get(`/feedback/service/${id}`)
      .then((res) => {
        console.log("Danh s√°ch ƒë√°nh gi√°:", res.data);
        setFeedbacks(res.data);
      })
      .catch((err) => {
        console.error("L·ªói khi l·∫•y danh s√°ch ƒë√°nh gi√°:", err);
      });

    // Th√™m ph·∫ßn l·∫•y danh s√°ch b√°c sƒ© by id
    api
      .get(`/consultants/by-service/${id}`)
      .then((res) => {
        console.log("Danh s√°ch b√°c sƒ©:", res.data);
        setConsultants(res.data || []);
      })
      .catch((err) => {
        console.error("L·ªói khi l·∫•y danh s√°ch b√°c sƒ©:", err);
      });
  }, [id]);

  if (loading) return <div className="loading">ƒêang t·∫£i d·ªØ li·ªáu...</div>;
  if (!service) return <div className="error">Kh√¥ng t√¨m th·∫•y d·ªãch v·ª•.</div>;

  return (
    <div className="service-detail-container">
      <div className="service-info-detail">
        <h2>{service.name}</h2>
        <p className="service-price">
          ‚Ç´ {service.price?.toLocaleString()} {service.unit || "ƒë"}
        </p>

        <Tabs defaultActiveKey="1">
          <Tabs.TabPane tab="Th√¥ng tin d·ªãch v·ª•" key="1">
            {/* M√¥ t·∫£ d·ªãch v·ª• t·ª´ API */}
            <div className="service-details-wrapper">
              <div className="service-description">
                <h3>V·ªÅ d·ªãch v·ª•</h3>
                <ul>
                  <div
                    className="description"
                    dangerouslySetInnerHTML={{ __html: service.description }}
                  />
                </ul>
              </div>

              {/* Th√™m ph·∫ßn chu·∫©n b·ªã */}
              <div className="prep-section">
                <h3>Qu√° tr√¨nh chu·∫©n b·ªã</h3>
                <div className="prep-items">
                  <div className="prep-item">
                    Mang theo s·ªï kh√°m b·ªánh, k·∫øt qu·∫£ kh√°m v√† c√°c x√©t nghi·ªám tr∆∞·ªõc
                    ƒë√≥ (n·∫øu c√≥).
                  </div>
                  <div className="prep-item">
                    üí¨ Tr∆∞·ªùng h·ª£p c√≥ c√°c bi·ªÉu hi·ªán ƒëau nh·ª©c b·∫•t th∆∞·ªùng, c√≥ th·ªÉ
                    trao ƒë·ªïi c√πng ƒë·ªôi ng≈© y b√°c sƒ©.
                  </div>
                  <div className="prep-item">
                    üìû Vui l√≤ng li√™n h·ªá v·ªõi b·ªô ph·∫≠n ChƒÉm s√≥c kh√°ch h√†ng c·ªßa
                    Columbia Asia ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n c·ª• th·ªÉ h∆°n.
                  </div>
                  <div className="prep-item">
                    ‚òéÔ∏è Hotline: <strong>0274 381 9933</strong>
                  </div>
                </div>
              </div>
            </div>
          </Tabs.TabPane>
          <Tabs.TabPane tab={`B√°c sƒ© (${consultants.length || 0})`} key="3">
            {consultants.length > 0 ? (
              <div className="consultants-list">
                {consultants.map((consultant) => (
                  <Card
                    key={consultant.id}
                    className="consultant-card consultant-card-clickable"
                    onClick={() => showConsultantModal(consultant)}
                  >
                    <div className="consultant-info">
                      <Avatar
                        size={64}
                        src={consultant.imageUrl}
                        icon={<UserOutlined />}
                      />
                      <div className="consultant-details">
                        <h4 className="consultant-name">
                          {consultant.fullname || "Ch∆∞a c√≥ t√™n"}
                        </h4>
                        <p className="consultant-specialization">
                          {consultant.specialization || "Ch∆∞a c√≥ chuy√™n khoa"}
                        </p>
                      </div>
                    </div>
                  </Card>
                ))}
              </div>
            ) : (
              <div className="empty-state">
                <p className="empty-state-text">Ch∆∞a c√≥ b√°c sƒ© n√†o</p>
              </div>
            )}
          </Tabs.TabPane>
          <Tabs.TabPane tab={`ƒê√°nh gi√° (${feedbacks.length || 0})`} key="2">
            {feedbacks.length > 0 ? (
              <div className="feedback-list">
                {feedbacks.map((feedback) => (
                  <div key={feedback.id} className="feedback-card">
                    <div className="feedback-header">
                      <h4 className="feedback-author">
                        {feedback.userName || "Kh√°ch h√†ng"}
                      </h4>
                      <StarRating rating={feedback.rating} />
                    </div>
                    <p className="feedback-date">
                      {new Date(feedback.createdAt).toLocaleDateString("vi-VN")}
                    </p>
                    <p className="feedback-comment">{feedback.comment}</p>
                  </div>
                ))}
              </div>
            ) : (
              <div className="empty-state">
                <p className="empty-state-text">Ch∆∞a c√≥ ƒë√°nh gi√° n√†o</p>
              </div>
            )}
          </Tabs.TabPane>
        </Tabs>
      </div>

      <div className="booking-form-wrapper">
        <BookingForm serviceIdProp={id} serviceDetail={service} />
      </div>

      {/* Modal th√¥ng tin chi ti·∫øt b√°c sƒ© */}
      <Modal
        title="Th√¥ng tin chi ti·∫øt b√°c sƒ©"
        open={isModalVisible}
        onCancel={handleModalClose}
        footer={[
          <Button key="cancel" onClick={handleModalClose}>
            ƒê√≥ng
          </Button>,
          <Button
            key="select"
            type="primary"
            onClick={() => handleSelectConsultant(selectedConsultant)}
          >
            Ch·ªçn b√°c sƒ© n√†y
          </Button>,
        ]}
        width={600}
        className="consultant-modal"
      >
        {selectedConsultant && (
          <div className="consultant-modal-content">
            <div className="consultant-modal-left">
              <Avatar
                size={120}
                src={selectedConsultant.imageUrl}
                icon={<UserOutlined />}
                className="consultant-modal-avatar"
              />
            </div>
            <div className="consultant-modal-right">
              <h3 className="consultant-modal-name">
                {selectedConsultant.fullname || "Ch∆∞a c√≥ t√™n"}
              </h3>
              <p className="consultant-modal-specialization">
                <strong>Chuy√™n khoa:</strong>{" "}
                {selectedConsultant.specialization || "Ch∆∞a c√≥ chuy√™n khoa"}
              </p>
              <p className="consultant-modal-email">
                <strong>Email:</strong> {selectedConsultant.email}
              </p>
              {selectedConsultant.phone && (
                <p className="consultant-modal-phone">
                  <strong>S·ªë ƒëi·ªán tho·∫°i:</strong> {selectedConsultant.phone}
                </p>
              )}
              {selectedConsultant.experience && (
                <p className="consultant-modal-experience">
                  <strong>Kinh nghi·ªám:</strong> {selectedConsultant.experience}
                </p>
              )}
              {selectedConsultant.description && (
                <p className="consultant-modal-description">
                  <strong>M√¥ t·∫£:</strong> {selectedConsultant.description}
                </p>
              )}
            </div>
          </div>
        )}
      </Modal>
    </div>
  );
};

export default ServiceDetail;
